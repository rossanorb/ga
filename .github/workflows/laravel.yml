name: Laravel CI/CD

on:
  push:
    branches: [ master ]

jobs:
  laravel-tests:
    name: CI
    runs-on: ubuntu-latest
    container:
      image: kirschbaumdevelopment/laravel-test-runner:7.4

    services:
       mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3  

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '7.4'
    - uses: actions/checkout@v2
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Install Dependencies
      run: |
        cd api
        composer install
    - name: Prepare Laravel Application
      run: |
        cd api
        php artisan key:generate
        php artisan migrate
    - name: Directory Permissions
      run: chmod -R 777 api/storage api/bootstrap/cache
          

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      run: |
        cd api
        vendor/bin/phpunit
  laravel-deploy:
    name: CD
    needs: laravel-tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with: 
        ref: main

    - name: Deploy to server
      uses: easingthemes/ssh-deploy@v2.2.11
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        ARGS: "-rltgoDzvO --exclude .env --exclude .docker --exclude .github"
        REMOTE_HOST: ${{ secrets.SSH_HOST }}
        REMOTE_USER: ${{ secrets.SSH_USER }}
        TARGET: /home/${{ secrets.REMOTE_TARGET }}/ga
        EXCLUDE: "/dist/, /node_modules/"

    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SSH_PORT }}
        script: |
            pwd 
            sudo docker ps -a

